version: '3.8'

services:

  redis:
    container_name: redis
    image: redis
    networks:
      - nesjs-network
    ports:
      - 6379:6379

  db:
    container_name: db
    image: postgres:11.2
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - nesjs-network
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
    logging:
      driver: none
    ports:
      - 5432:5432

  backend:
    depends_on:
      - db
    container_name: nestjs_api_prod
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    env_file:
      - ./server/.env.production
    command: npm run start:prod
    ports:
      - 8080:8080
    networks:
      - nesjs-network
    restart: always

  client:
    depends_on:
      - backend
    build:
      context: ./client
      dockerfile: ./Dockerfile.prod
    restart: always

    container_name: react_client_prod
    ports:
      - 4200:80



networks:
  nesjs-network: